# root logger settings usage in java: 
# Initialization:
# private static final Logger log = Logger.getLogger(YourCurrentClass.class);
# Example log:
# log.info("This is an example");
log4j.rootLogger=debug, stdout, viewLog

# write to stdout (console)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n

# log file location specifications
log4j.appender.viewLog=org.apache.log4j.RollingFileAppender
log4j.appender.viewLog.File=${catalina.home}/logs/view.log

# Create new log file when reaching 5 mb size but backup maximal 4 files
log4j.appender.viewLog.MaxFileSize=5MB
log4j.appender.viewLog.MaxBackupIndex=4

# Conversion pattern specifications inside the log file
log4j.appender.viewLog.layout=org.apache.log4j.PatternLayout
log4j.appender.viewLog.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n
# used to be the following:
#log4j.appender.viewLog.layout.ConversionPattern=%d %p %t %c - %m%n

# second logger settings for NLP related logs for development: 
# Initialization:
# private static final Logger log = Logger.getLogger("rusNLPLogger");
# Example log:
# log.info("This is an example");
log4j.logger.rusNLPLogger=debug, rusNLPLog

# Do NOT inherit the settings of the root logger (don't write to the console)
# Ensure that the root logger and second logger are two separate logger
log4j.additivity.rusNLPLogger=false

# second log file location specifications
log4j.appender.rusNLPLog=org.apache.log4j.RollingFileAppender
log4j.appender.rusNLPLog.File=${catalina.home}/logs/rusNLP.log

# Create new log file when reaching 5 mb size but backup maximal 4 files
log4j.appender.rusNLPLog.MaxFileSize=5MB
log4j.appender.rusNLPLog.MaxBackupIndex=4

# Conversion pattern specifications inside the log file
log4j.appender.rusNLPLog.layout=org.apache.log4j.PatternLayout
log4j.appender.rusNLPLog.layout.ConversionPattern=%d %5p [%t] (%F:%L) - %m%n